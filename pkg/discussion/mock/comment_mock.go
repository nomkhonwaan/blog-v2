// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nomkhonwaan/myblog/pkg/discussion (interfaces: CommentRepository)

// Package mock_discussion is a generated GoMock package.
package mock_discussion

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	discussion "github.com/nomkhonwaan/myblog/pkg/discussion"
	reflect "reflect"
)

// MockCommentRepository is a mock of CommentRepository interface
type MockCommentRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCommentRepositoryMockRecorder
}

// MockCommentRepositoryMockRecorder is the mock recorder for MockCommentRepository
type MockCommentRepositoryMockRecorder struct {
	mock *MockCommentRepository
}

// NewMockCommentRepository creates a new mock instance
func NewMockCommentRepository(ctrl *gomock.Controller) *MockCommentRepository {
	mock := &MockCommentRepository{ctrl: ctrl}
	mock.recorder = &MockCommentRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCommentRepository) EXPECT() *MockCommentRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockCommentRepository) Create(arg0 context.Context, arg1 string) (discussion.Comment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(discussion.Comment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockCommentRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCommentRepository)(nil).Create), arg0, arg1)
}

// FindAllByIDs mocks base method
func (m *MockCommentRepository) FindAllByIDs(arg0 context.Context, arg1 interface{}) ([]discussion.Comment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllByIDs", arg0, arg1)
	ret0, _ := ret[0].([]discussion.Comment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllByIDs indicates an expected call of FindAllByIDs
func (mr *MockCommentRepositoryMockRecorder) FindAllByIDs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllByIDs", reflect.TypeOf((*MockCommentRepository)(nil).FindAllByIDs), arg0, arg1)
}

// Save mocks base method
func (m *MockCommentRepository) Save(arg0 context.Context, arg1 interface{}, arg2 discussion.CommentQuery) (discussion.Comment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1, arg2)
	ret0, _ := ret[0].(discussion.Comment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save
func (mr *MockCommentRepositoryMockRecorder) Save(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockCommentRepository)(nil).Save), arg0, arg1, arg2)
}
