// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nomkhonwaan/myblog/pkg/blog (interfaces: CategoryRepository)

// Package mock_blog is a generated GoMock package.
package mock_blog

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	blog "github.com/nomkhonwaan/myblog/pkg/blog"
	reflect "reflect"
)

// MockCategoryRepository is a mock of CategoryRepository interface
type MockCategoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCategoryRepositoryMockRecorder
}

// MockCategoryRepositoryMockRecorder is the mock recorder for MockCategoryRepository
type MockCategoryRepositoryMockRecorder struct {
	mock *MockCategoryRepository
}

// NewMockCategoryRepository creates a new mock instance
func NewMockCategoryRepository(ctrl *gomock.Controller) *MockCategoryRepository {
	mock := &MockCategoryRepository{ctrl: ctrl}
	mock.recorder = &MockCategoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCategoryRepository) EXPECT() *MockCategoryRepositoryMockRecorder {
	return m.recorder
}

// FindAll mocks base method
func (m *MockCategoryRepository) FindAll(arg0 context.Context) ([]blog.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", arg0)
	ret0, _ := ret[0].([]blog.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll
func (mr *MockCategoryRepositoryMockRecorder) FindAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockCategoryRepository)(nil).FindAll), arg0)
}

// FindAllByIDs mocks base method
func (m *MockCategoryRepository) FindAllByIDs(arg0 context.Context, arg1 interface{}) ([]blog.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllByIDs", arg0, arg1)
	ret0, _ := ret[0].([]blog.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllByIDs indicates an expected call of FindAllByIDs
func (mr *MockCategoryRepositoryMockRecorder) FindAllByIDs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllByIDs", reflect.TypeOf((*MockCategoryRepository)(nil).FindAllByIDs), arg0, arg1)
}

// FindByID mocks base method
func (m *MockCategoryRepository) FindByID(arg0 context.Context, arg1 interface{}) (blog.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", arg0, arg1)
	ret0, _ := ret[0].(blog.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID
func (mr *MockCategoryRepositoryMockRecorder) FindByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockCategoryRepository)(nil).FindByID), arg0, arg1)
}
