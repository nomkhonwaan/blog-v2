// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nomkhonwaan/myblog/pkg/image (interfaces: Resizer)

// Package mock_image is a generated GoMock package.
package mock_image

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockResizer is a mock of Resizer interface
type MockResizer struct {
	ctrl     *gomock.Controller
	recorder *MockResizerMockRecorder
}

// MockResizerMockRecorder is the mock recorder for MockResizer
type MockResizerMockRecorder struct {
	mock *MockResizer
}

// NewMockResizer creates a new mock instance
func NewMockResizer(ctrl *gomock.Controller) *MockResizer {
	mock := &MockResizer{ctrl: ctrl}
	mock.recorder = &MockResizerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockResizer) EXPECT() *MockResizerMockRecorder {
	return m.recorder
}

// Resize mocks base method
func (m *MockResizer) Resize(arg0 io.Reader, arg1, arg2 int) (io.Reader, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Resize", arg0, arg1, arg2)
	ret0, _ := ret[0].(io.Reader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resize indicates an expected call of Resize
func (mr *MockResizerMockRecorder) Resize(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resize", reflect.TypeOf((*MockResizer)(nil).Resize), arg0, arg1, arg2)
}
